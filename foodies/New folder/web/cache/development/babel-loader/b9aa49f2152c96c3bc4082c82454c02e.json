{"ast":null,"code":"var _require = require(\"@reduxjs/toolkit\"),\n    createSelector = _require.createSelector;\n\nvar cartSelector = function cartSelector(state) {\n  return state.cart;\n};\n\nexport var cartTotalSelector = createSelector([cartSelector], function (cart) {\n  return cart.reduce(function (total, current) {\n    return total += current.quantity;\n  }, 0);\n});\nexport var cartTotalPriceSelector = createSelector([cartSelector], function (cart) {\n  return cart.reduce(function (total, current) {\n    return total += current.Price * current.quantity;\n  });\n});","map":{"version":3,"names":["require","createSelector","cartSelector","state","cart","cartTotalSelector","reduce","total","current","quantity","cartTotalPriceSelector","Price"],"sources":["C:/Users/codetribe/Downloads/react-native-ecommerce-redux-toolkit-main/react-native-ecommerce-redux-toolkit-main/src/redux/selectors.js"],"sourcesContent":["const { createSelector } = require(\"@reduxjs/toolkit\");\n\nconst cartSelector = (state) => state.cart;\n\nexport const cartTotalSelector = createSelector([cartSelector], (cart) =>\n  cart.reduce((total, current) => (total += current.quantity), 0)\n);\n\nexport const cartTotalPriceSelector = createSelector([cartSelector], (cart) =>\n  cart.reduce(\n    (total, current) => (total += current.Price * current.quantity),\n    \n  )\n);\n"],"mappings":"AAAA,eAA2BA,OAAO,CAAC,kBAAD,CAAlC;AAAA,IAAQC,cAAR,YAAQA,cAAR;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD;EAAA,OAAWA,KAAK,CAACC,IAAjB;AAAA,CAArB;;AAEA,OAAO,IAAMC,iBAAiB,GAAGJ,cAAc,CAAC,CAACC,YAAD,CAAD,EAAiB,UAACE,IAAD;EAAA,OAC9DA,IAAI,CAACE,MAAL,CAAY,UAACC,KAAD,EAAQC,OAAR;IAAA,OAAqBD,KAAK,IAAIC,OAAO,CAACC,QAAtC;EAAA,CAAZ,EAA6D,CAA7D,CAD8D;AAAA,CAAjB,CAAxC;AAIP,OAAO,IAAMC,sBAAsB,GAAGT,cAAc,CAAC,CAACC,YAAD,CAAD,EAAiB,UAACE,IAAD;EAAA,OACnEA,IAAI,CAACE,MAAL,CACE,UAACC,KAAD,EAAQC,OAAR;IAAA,OAAqBD,KAAK,IAAIC,OAAO,CAACG,KAAR,GAAgBH,OAAO,CAACC,QAAtD;EAAA,CADF,CADmE;AAAA,CAAjB,CAA7C"},"metadata":{},"sourceType":"module"}